---
import { getCollection, type CollectionEntry } from "astro:content";
const currentPostSlug = Astro.props.currentPostSlug;

export async function getRecommendedPosts(currentPostSlug) {
    const posts = await getCollection("blog");
    const currentIndex = posts.findIndex(post => post.slug === currentPostSlug);
    const previousPost = currentIndex > 0 ? posts[currentIndex - 1] : null;
    const nextPost = currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;

    let recommendedPosts = posts.filter(post => post.slug !== currentPostSlug);
    recommendedPosts = recommendedPosts.slice(-3).reverse();

    if (nextPost) {
        recommendedPosts = [nextPost, ...recommendedPosts];
    }

    if (previousPost) {
        recommendedPosts = [previousPost, ...recommendedPosts];
    }

    // Remove duplicates and limit to 5 posts
    recommendedPosts = [...new Set(recommendedPosts)].slice(0, 5);

    return recommendedPosts;
}

const recommendedPosts = await getRecommendedPosts(currentPostSlug);
---

<section class="my-4">
  <blockquote>
    <h2>âœ¨ Recommended Posts</h2>

    <ul>
      {recommendedPosts.map((post) => (
        <li>
          <a href={`/blog/${post.slug}`}>{post.data.title}</a>
        </li>
      ))}
    </ul>
  </blockquote>
</section>