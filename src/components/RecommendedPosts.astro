---
import { getCollection } from 'astro:content';
const { currentPostSlug, conclusion } = Astro.props;

export async function getRecommendedPosts(currentPostSlug: string) {
  const posts = await getCollection('blog');
  const currentIndex = posts.findIndex(post => post.slug === currentPostSlug);
  const previousPost = currentIndex > 0 ? posts[currentIndex - 1] : null;
  const nextPost =
    currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;

  let recommendedPosts = posts.filter(post => post.slug !== currentPostSlug);
  recommendedPosts.sort((a, b) => {
    if (a.data.pubDate && b.data.pubDate) {
      return (
        new Date(a.data.pubDate).getTime() - new Date(b.data.pubDate).getTime()
      );
    } else {
      return 0;
    }
  });
  recommendedPosts = recommendedPosts.slice(-3);

  if (previousPost) {
    recommendedPosts = [previousPost, ...recommendedPosts];
  }

  if (nextPost) {
    recommendedPosts = [nextPost, ...recommendedPosts];
  }

  // Remove duplicates and limit to 5 posts
  recommendedPosts = [...new Set(recommendedPosts)].slice(0, 3);

  return recommendedPosts;
}

const recommendedPosts = await getRecommendedPosts(currentPostSlug);
---

<section class="recommended-posts">
  {
    conclusion && (
      <p>
        <b>{conclusion}</b>
      </p>
    )
  }

  <h3>âœ¨ Explore More:</h3>

  <ul>
    {
      recommendedPosts.map(post => (
        <li>
          <a href={`/blog/${post.slug}`}>{post.data.title}</a>
        </li>
      ))
    }
  </ul>
</section>
