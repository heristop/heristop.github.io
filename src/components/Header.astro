---
import HeaderLink from './HeaderLink.astro';
const { image = '/images/zazen-header.png' } = Astro.props;
import { SITE_TITLE } from '../consts';

const title = `{ ${SITE_TITLE.replace(' ', '_')} }`;
---

<a href="#main-content" class="skip-link">Skip to main content</a>

<!-- Static Header with Banner -->
<header class="site-header-static">
  <div class="site-header__container">
    <div class="header__brand-section">
      <h1 class="site-header__title title">
        <a href="/" aria-label="Go to homepage">{title}</a>
      </h1>
    </div>

    <!-- Initial Navigation (visible immediately) -->
    <nav
      class="header__nav-initial"
      aria-label="Main navigation"
      role="navigation"
    >
      <div class="header__nav-links">
        <!-- Desktop Navigation -->
        <div
          class="header__nav header__nav--desktop"
          id="initial-nav"
          role="menubar"
        >
          <HeaderLink class="header__link" href="/" role="menuitem"
            >Home</HeaderLink
          >
          <HeaderLink class="header__link" href="/blog" role="menuitem"
            >Blog</HeaderLink
          >
          <HeaderLink class="header__link" href="/projects" role="menuitem"
            >Projects</HeaderLink
          >
          <HeaderLink class="header__link" href="/about" role="menuitem"
            >About</HeaderLink
          >
        </div>

        <!-- Mobile Menu Toggle -->
        <button
          class="header__mobile-toggle"
          aria-label="Toggle navigation menu"
          aria-expanded="false"
          aria-controls="initial-nav"
          type="button"
        >
          <span class="header__hamburger"></span>
          <span class="header__hamburger"></span>
          <span class="header__hamburger"></span>
        </button>

        <!-- Mobile Navigation -->
        <div
          class="header__nav header__nav--mobile"
          id="initial-mobile-nav"
          role="menubar"
        >
          <HeaderLink
            class="header__link header__link--mobile"
            href="/"
            role="menuitem">Home</HeaderLink
          >
          <HeaderLink
            class="header__link header__link--mobile"
            href="/blog"
            role="menuitem">Blog</HeaderLink
          >
          <HeaderLink
            class="header__link header__link--mobile"
            href="/projects"
            role="menuitem">Projects</HeaderLink
          >
          <HeaderLink
            class="header__link header__link--mobile"
            href="/about"
            role="menuitem">About</HeaderLink
          >
        </div>
      </div>
    </nav>

    <div class="banner site-header__banner" id="header-banner">
      <div
        class="img site-header__banner-image"
        style={`background: transparent url(${image}) no-repeat left center / cover`}
        role="img"
        aria-label="Banner image"
      >
      </div>
    </div>
  </div>
</header>

<!-- Sticky Navigation Bar -->
<nav
  class="site-header-nav"
  id="sticky-nav"
  aria-label="Main navigation"
  role="navigation"
>
  <div class="site-header-nav__container">
    <div class="header__nav-content">
      <div class="header__brand-mini">
        <a href="/" class="header__brand-link" aria-label="Go to homepage"
          >{SITE_TITLE}</a
        >
      </div>

      <!-- Desktop Navigation -->
      <div
        class="header__nav header__nav--desktop"
        id="header-nav"
        role="menubar"
      >
        <HeaderLink class="header__link" href="/" role="menuitem"
          >Home</HeaderLink
        >
        <HeaderLink class="header__link" href="/blog" role="menuitem"
          >Blog</HeaderLink
        >
        <HeaderLink class="header__link" href="/projects" role="menuitem"
          >Projects</HeaderLink
        >
        <HeaderLink class="header__link" href="/about" role="menuitem"
          >About</HeaderLink
        >
      </div>

      <!-- Mobile Menu Toggle -->
      <button
        class="header__mobile-toggle"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="header-nav"
        type="button"
      >
        <span class="header__hamburger"></span>
        <span class="header__hamburger"></span>
        <span class="header__hamburger"></span>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div class="header__nav header__nav--mobile" id="mobile-nav" role="menubar">
      <HeaderLink
        class="header__link header__link--mobile"
        href="/"
        role="menuitem">Home</HeaderLink
      >
      <HeaderLink
        class="header__link header__link--mobile"
        href="/blog"
        role="menuitem">Blog</HeaderLink
      >
      <HeaderLink
        class="header__link header__link--mobile"
        href="/projects"
        role="menuitem">Projects</HeaderLink
      >
      <HeaderLink
        class="header__link header__link--mobile"
        href="/about"
        role="menuitem">About</HeaderLink
      >
    </div>
  </div>
</nav>

<script>
  const setupMobileMenu = (toggle: Element | null, nav: Element | null) => {
    if (!toggle || !nav) return;

    const toggleEl = toggle as HTMLElement;
    const navEl = nav as HTMLElement;

    if (toggleEl.dataset.menuInitialized === 'true') return;
    toggleEl.dataset.menuInitialized = 'true';

    toggleEl.addEventListener('click', () => {
      const isExpanded = toggleEl.getAttribute('aria-expanded') === 'true';

      toggleEl.setAttribute('aria-expanded', (!isExpanded).toString());
      toggleEl.classList.toggle('header__mobile-toggle--active');
      navEl.classList.toggle('header__nav--mobile-open');

      document.body.classList.toggle('mobile-menu-open', !isExpanded);
    });

    const mobileLinks = navEl.querySelectorAll('.header__link--mobile');
    mobileLinks.forEach(link => {
      const anchor = link as HTMLElement;
      if (anchor.dataset.menuLinkInitialized === 'true') return;
      anchor.dataset.menuLinkInitialized = 'true';

      anchor.addEventListener('click', () => {
        toggleEl.setAttribute('aria-expanded', 'false');
        toggleEl.classList.remove('header__mobile-toggle--active');
        navEl.classList.remove('header__nav--mobile-open');
        document.body.classList.remove('mobile-menu-open');
      });
    });
  };

  const initializeMobileMenus = () => {
    const initialMobileToggle = document.querySelector(
      '.header__nav-initial .header__mobile-toggle'
    );
    const initialMobileNav = document.querySelector('#initial-mobile-nav');
    const stickyMobileToggle = document.querySelector(
      '.site-header-nav .header__mobile-toggle'
    );
    const stickyMobileNav = document.querySelector('#mobile-nav');

    setupMobileMenu(initialMobileToggle, initialMobileNav);
    setupMobileMenu(stickyMobileToggle, stickyMobileNav);
  };

  const setupEscapeListener = () => {
    const existing = (window as any).__headerEscapeHandler as
      | ((event: KeyboardEvent) => void)
      | undefined;

    if (existing) {
      document.removeEventListener('keydown', existing);
    }

    const handler = (event: KeyboardEvent) => {
      if (event.key !== 'Escape') return;

      const openMenus = document.querySelectorAll(
        '.header__nav--mobile.header__nav--mobile-open'
      );

      openMenus.forEach(nav => {
        const toggle = nav
          .closest('.site-header-static, .site-header-nav')
          ?.querySelector('.header__mobile-toggle') as HTMLElement | null;

        if (toggle) {
          toggle.setAttribute('aria-expanded', 'false');
          toggle.classList.remove('header__mobile-toggle--active');
        }

        nav.classList.remove('header__nav--mobile-open');
      });

      if (openMenus.length) {
        document.body.classList.remove('mobile-menu-open');
      }
    };

    document.addEventListener('keydown', handler);
    (window as any).__headerEscapeHandler = handler;
  };

  const initializeStickyNav = () => {
    const cleanup = (window as any).__headerStickyCleanup as
      | (() => void)
      | undefined;

    if (cleanup) {
      cleanup();
    }

    const stickyNav = document.querySelector('.site-header-nav') as
      | HTMLElement
      | null;
    const banner = document.querySelector('#header-banner') as
      | HTMLElement
      | null;

    if (!stickyNav || !banner) {
      (window as any).__headerStickyCleanup = undefined;
      return;
    }

    let bannerBottom = 0;
    let isVisible = false;
    let ticking = false;
    let resizeTimeout: ReturnType<typeof setTimeout>;

    const updateBannerPosition = () => {
      const bannerRect = banner.getBoundingClientRect();
      bannerBottom = bannerRect.bottom + window.scrollY;
    };

    const updateStickyNav = () => {
      const currentScrollY = window.scrollY;
      const isMobile = window.innerWidth <= 767;

      if (isMobile) {
        stickyNav.style.setProperty('--nav-opacity', '1');
        stickyNav.style.setProperty('--nav-translate', '0%');
        stickyNav.style.setProperty('--nav-blur', '0px');

        if (!isVisible) {
          stickyNav.classList.add('site-header-nav--active');
          isVisible = true;
        }

        ticking = false;
        return;
      }

      const activationZone = bannerBottom - 200;
      const fullyVisibleZone = bannerBottom - 50;

      let opacity = 0;
      let translateY = -100;
      let backdropBlur = 0;

      if (currentScrollY >= activationZone) {
        const revealProgress = Math.min(
          (currentScrollY - activationZone) / (fullyVisibleZone - activationZone),
          1
        );

        opacity = revealProgress;
        translateY = -100 + revealProgress * 100;
        backdropBlur = revealProgress * 20;

        if (currentScrollY >= fullyVisibleZone) {
          translateY = 0;
          opacity = 1;
        }
      }

      stickyNav.style.setProperty('--nav-opacity', opacity.toString());
      stickyNav.style.setProperty('--nav-translate', `${translateY}%`);
      stickyNav.style.setProperty('--nav-blur', `${backdropBlur}px`);

      if (opacity > 0 && !isVisible) {
        stickyNav.classList.add('site-header-nav--active');
        isVisible = true;
      } else if (opacity <= 0 && isVisible) {
        stickyNav.classList.remove('site-header-nav--active');
        isVisible = false;
      }

      ticking = false;
    };

    const handleScroll = () => {
      if (!ticking) {
        requestAnimationFrame(updateStickyNav);
        ticking = true;
      }
    };

    const handleResize = () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(() => {
        updateBannerPosition();
        updateStickyNav();
      }, 100);
    };

    window.addEventListener('resize', handleResize);
    window.addEventListener('scroll', handleScroll, { passive: true });

    (window as any).__headerStickyCleanup = () => {
      window.removeEventListener('resize', handleResize);
      window.removeEventListener('scroll', handleScroll);
    };

    updateBannerPosition();
    updateStickyNav();
  };

  const initializeHeader = () => {
    const mobileNavs = document.querySelectorAll('.header__nav--mobile');
    mobileNavs.forEach(nav => nav.classList.remove('header__nav--mobile-open'));

    const toggles = document.querySelectorAll('.header__mobile-toggle');
    toggles.forEach(toggle => {
      const toggleEl = toggle as HTMLElement;
      toggleEl.classList.remove('header__mobile-toggle--active');
      toggleEl.setAttribute('aria-expanded', 'false');
    });

    initializeMobileMenus();
    setupEscapeListener();
    initializeStickyNav();
    document.body.classList.remove('mobile-menu-open');
  };

  document.addEventListener('DOMContentLoaded', initializeHeader);
  document.addEventListener('astro:after-swap', initializeHeader);
</script>
