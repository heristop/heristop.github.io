---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import SocialShare from "../../components/SocialShare.astro";
import RecommendedPosts from "../../components/RecommendedPosts.astro";

const currentPostSlug = Astro.props.slug;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await post.render();
const conclusion = post.data.conclusion;

const plainText = post.body;
const words = plainText.split(/\s+/).length;
const readingTime = Math.ceil(words / 200);

const postData = {
  ...post.data,
  readingTime,
};
---

<Layout {...postData}>
  <div class="post-page">
    <div class="post-page__header">
      <div class="post-page__share">
        <SocialShare
          class="post-page__share-links"
          title={post.data.title}
          slug={currentPostSlug}
          minimal
        />
      </div>

      <div class="post-page__reading-time u-text-muted">
        <svg xmlns="http://www.w3.org/2000/svg" class="post-page__reading-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
        </svg>
        <span>{readingTime} min read</span>
      </div>
    </div>

    <Content />

    <blockquote class="post-page__endquote">
      <RecommendedPosts {currentPostSlug} {conclusion} />
    </blockquote>
  </div>
</Layout>
