---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

export type Post = {
  data: {
    pubDate?: Date;
    title: string;
    slug: string;
  };
};

const posts = (await getCollection("blog")).sort(
  (a, b) => (b.data.pubDate?.valueOf() ?? 0) - (a.data.pubDate?.valueOf() ?? 0)
);

function groupPostsByYear(posts: any) {
  return posts.reduce(
    (
      acc: { [x: string]: any[] },
      post: { data: { pubDate?: { getFullYear: () => any } } }
    ) => {
      const year = post.data.pubDate?.getFullYear();
      if (!acc[year]) {
        acc[year] = [] as Post[];
      }
      acc[year].push(post);
      return acc;
    },
    {}
  );
}

const postsByYear = groupPostsByYear(posts);
const sortedYears = Object.keys(postsByYear).sort(
  (a, b) => Number(b) - Number(a)
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <main class="site">
      <Header title={SITE_TITLE} />

      <div class="content">
        <ul class="posts">
          {
            sortedYears.map((year) => (
              <li>
                <h2 class="flex items-center gap-x-2 align-middle year-title">
                  <img
                    class="year-icon"
                    src="/images/layout.png"
                    alt="Year Icon"
                  />
                  {year}
                </h2>

                <hr />

                <ul class="posts-by-year">
                  {postsByYear[year].map(
                    (post: {
                      url: string;
                      data: { pubDate?: Date; title: string };
                      slug: string;
                    }) => (
                      <li class="flex items-center space-x-2 align-middle">
                        {post.data.pubDate && (
                          <span class="meta post-date text-sm w-12">
                            <FormattedDate date={post.data.pubDate} />
                          </span>
                        )}

                        <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                      </li>
                    )
                  )}
                </ul>
              </li>
            ))
          }
        </ul>
      </div>

      <div class="eof text-sm">--EOF--</div>

      <Footer />
    </main>
  </body>
</html>
